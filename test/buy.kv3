<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:generic:version{7412167c-06e9-4698-aff2-e63eb59037e7} -->
{
	config = "ownscripts/CS2AI/test/bt_config.kv3"
	root =
	{
		type = "decorator_repeat"
		child =
		{
			type = "selector"
			children =
			[
				{
					// with the "domain" set only one bot on the server will run this per round.
					type = "decorator_run_once"
					domain = "'CoordinatedBuy'"
					child =
					{
						type = "sequencer"
						children =
						[
							{
								// set a global variable to make our teammates wait for the coordinated buy.
								type = "action_set_global_counter"
								input_name = "'WaitForCoordinatedBuy'"
								input_value = 1
							},
							{
								type = "action_wait"
								wait_time_min = 3
								wait_time_max = 3
							},
							{
								// continue with the sequencer even if we weren't able to coordinate any buy.
								type = "decorator_succeed"
								child =
								{
									// when used in a selector coordinated buys that can't be fulfilled will be skipped.
									type = "selector"
									children =
									[
										{
											type = "action_coordinated_buy"
											// team that should coordinte a buy. Works the same as in "decorator_sensor".
											team_filter = "SAME"
											// all of the bots on the specified team must have at least this much money.
											// should be set to the minimum amount of money required to purchase the needed items
											// in this case the minimum amount of money would be 500, as that's needed
											// to buy the "SetupSmokeAndFlashbang1".
											save_threshold = 2000
											// advised to only be used in fully pve modes,
											// due to being assigned to the other team as well.
											id_no_purchase = "DidNotPurchase"
											// array with purchases.
											// in this case it needs at least 4 bots on the team in order to go through.
											purchases =
											[
												{
													// instead of setting up the items here
													// we'll buy them later
													items = [ ]
													// a variable with this name will be saved on that bot.
													// check with "condition_is_empty".
													id = "SetupSmoke0"
												},
												{
													items = [  ]
													id = "Fire"
												},
												{
													items = [  ]
													id = "SetupSmoke1"
												},
												{
													items = [  ]
													id = "SetupSmoke2"
												}
											]
										},
										{
											// this node needs less bots and less money to go through.
											type = "action_coordinated_buy"
											team_filter = "SAME"
											save_threshold = 1000
											id_no_purchase = "DidNotPurchase"
											purchases =
											[
												{
													items = [  ]
													id = "SetupSmoke0"
												},
												{
													items = [  ]
													id = "Fire"
												}
											]
										},
										{
											// this node will always go through as long as there's at least 2 bots on the team.
											type = "action_coordinated_buy"
											team_filter = "SAME"
											save_threshold = 0
											id_no_purchase = "DidNotPurchase"
											purchases =
											[
												{
													items = [  ]
													// ids don't need to be unique, they are saved as a local variable on
													// the bot that bought them.
													id = "SetupNoGrenades"
												},
												{
													items = [  ]
													id = "SetupNoGrenades"
												}
											]
										}
									]
								}
							},
							{
								type = "action_set_global_counter"
								input_name = "'WaitForCoordinatedBuy'"
								input_value = 0
							}
						]
					}
				},
				// Wait 4 seconds for the coordinated buy to be done.
				{
					type = "decorator_run_once"
					child =
					{
						type = "decorator_wait_success"
						timeout = 4
						child =
						{
							type = "action_compare_global_counter"
							input_name = "'WaitForCoordinatedBuy'"
							input_value = 0
						}
					}
				},
				// alternative method for buying items that avoids the "duplicate buy" bug
				{
					type = "decorator_run_once"
					child =
					{
						type = "selector"
						children =
						[
							{
								type = "condition_is_empty"
								input = "SetupSmoke0"
								negated = 1
								child =
								{
									// bot will try to buy all of the items in this node
									type = "action_custom_buy"
									item_aliases =
									[
										"smokegrenade"									
									]
								}
							},
							{
								type = "condition_is_empty"
								input = "Fire"
								negated = 1
								child =
								{
									type = "action_custom_buy"
									item_aliases =
									[
										"molotov"										
									]
								}
							},
							{
								type = "condition_is_empty"
								input = "SetupSmoke1"
								negated = 1
								child =
								{
									type = "action_custom_buy"
									item_aliases =
									[
										"smokegrenade"
									]
								}
							},
							{
								type = "condition_is_empty"
								input = "SetupSmoke2"
								negated = 1
								child =
								{
									type = "action_custom_buy"
									item_aliases =
									[
										"smokegrenade"
									]
								}
							}
						]
					}
				},				
				// now check for the ids with "condition_is_empty"
				// to make specific bots do the setups you want!
				{
					type = "condition_is_empty"
					input = "SetupSmoke0"
					negated = 1
					child =
					{
						type = "subtree"
						file = "ownscripts/CS2AI/Maps/Mirage/T/Execute/bt_midsmoke.kv3"
						name = "Midsmoke"
					}
				},
				{
					type = "condition_is_empty"
					input = "Fire"
					negated = 1
					child =
					{
						type = "action_move_to"
						destination = "438.833313 -1438.072998 -111.968750"
						movement_type = "BT_ACTION_MOVETO_RUN"
						route_type = "BT_ACTION_MOVETO_FASTEST_ROUTE"
						auto_look_adjust = 1
						damaging_areas_penalty_cost = 0.0
					}
				},
				{
					type = "condition_is_empty"
					input = "SetupSmoke1"
					negated = 1
					child =
					{
						type = "subtree"
						file = "ownscripts/CS2AI/Maps/Mirage/T/Execute/bt_stairsmoke.kv3"
						name = "Stairsmoke"
					}
				},
				{
					type = "condition_is_empty"
					input = "SetupSmoke2"
					negated = 1
					child =
					{
						type = "subtree"
						file = "ownscripts/CS2AI/Maps/Mirage/T/Execute/bt_connectorsmoke.kv3"
						name = "Connectorsmoke"
					}
				},
				{
					type = "condition_is_empty"
					input = "SetupNoGrenades"
					negated = 1
					child =
					{
						type = "action_crouch"
					}
				},
				{
					type = "condition_is_empty"
					input = "DidNotPurchase"
					negated = 1
					child =
					{
						type = "action_jump"
					}
				},
				// Else: go to A site
				{
					// sequencer: evaluate first to last child, in order
					type = "sequencer"
					children =
					[
						{
							type = "action_equip_weapon"
							weapon = "BEST"
						},
						{
							type = "decorator_random_int"
							min = 0
							max = 0
							output = "BombSiteIndex"
							child =
							{
								type = "action_choose_bomb_site_area"
								input = "BombSiteIndex"
								output = "HuntAreas"
							}
						},	
						{
							type = "action_choose_random_waypoint"
							input = "HuntAreas"
							output = "TargetHuntArea"
						},					
						{
							type = "action_move_to"
							destination = "TargetHuntArea"
							movement_type = "BT_ACTION_MOVETO_RUN"
							route_type = "BT_ACTION_MOVETO_FASTEST_ROUTE"
						}
					]
				}
			]
		}
	}
}